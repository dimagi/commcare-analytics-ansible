import hq_superset

from flask_appbuilder.security.manager import AUTH_OAUTH, AUTH_DB
from superset import config as superset_config



hq_superset.patch_superset_config(superset_config)


SQLALCHEMY_DATABASE_URI = 'postgresql://{{ default_db_user }}:{{ default_db_password }}@{{ default_db_host }}:{{ default_db_port }}/{{ superset_db_name }}'

SECRET_KEY = "{{vault_superset_secret_key}}"

AUTH_TYPE = {{ superset_auth_type }}


OAUTH_PROVIDERS = [
    {
        'name': 'commcare',
        'token_key':'{{oauth_creds.token_key}}',
        'remote_app': {
            'client_id': '{{oauth_creds.client_id}}',
            'client_secret': '{{oauth_creds.client_secret}}',
            'api_base_url': '{{oauth_creds.base_url}}',
            'access_token_url': '{{oauth_creds.base_url}}oauth/token/',
            'authorize_url': '{{oauth_creds.base_url}}oauth/authorize/',
            'client_kwargs':{
                'scope': 'reports:view access_apis'
            },
        }
    }
]


# Will allow user self registration, allowing to create Flask users from Authorized User
AUTH_USER_REGISTRATION = True

# The default user self registration role
AUTH_USER_REGISTRATION_ROLE = "Gamma"

SUPERSET_WEBSERVER_ADDRESS = "{{superset_public_host}}"

AUTH_USER_ADDITIONAL_ROLES = ["sql_lab"]

MAPBOX_API_KEY = "{{vault_mapbox_api_key}}"

FEATURE_FLAGS = {
    "DASHBOARD_CROSS_FILTERS": True,
    "DASHBOARD_NATIVE_FILTERS": True,
    "DASHBOARD_NATIVE_FILTERS_SET": True,
    "DASHBOARD_FILTERS_EXPERIMENTAL": True,
}
