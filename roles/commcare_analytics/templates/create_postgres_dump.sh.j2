#!/bin/bash
TODAY=$(date +"%Y_%m_%d")
NOW=$(date +"%Y_%m_%d %H:%M:%S")

BACKUP_NAME="postgres_backup_${TODAY}"
BACKUP_DIRECTORY="{{ postgresql_backup_dir }}/$BACKUP_NAME"
LOGFILE="/var/tmp/cron_log"

log() {
    echo "[$NOW] $1" >> $LOGFILE
}

log "Creating $BACKUP_DIRECTORY"
mkdir -p $BACKUP_DIRECTORY


#Dump databases in BACKUP_DIRECTORY
DB_LIST="{{ postgresql_backup_db_list }}"

for db_name in $DB_LIST
do
    destination="$BACKUP_DIRECTORY/$db_name.dump"
    log "Dumping $db_name to $destination";

    pg_dump -w --dbname=$db_name --user="{{ default_db_user }}" --port="{{ default_db_port }}" --host="{{ default_db_host }}" --file=$destination;

    if [[ $? -ne 0 ]] ; then
        log "Unable to dump database '$db_name'";
        exit 1
    fi
done

#Create archive
log "Compressing and archiving database dumps";
tar --gzip -cf $BACKUP_DIRECTORY.tar.zst $BACKUP_DIRECTORY;
if [[ $? -ne 0 ]] ; then
    log "Something went wrong while archiving.";
    exit 1
fi

#Upload to S3
log "Uploading to S3";
aws s3api put-object --bucket "{{ secrets.s3_bucket }}" --key $BACKUP_NAME --server-side-encryption AES256 --body $BACKUP_DIRECTORY.tar.zst
if [[ $? -ne 0 ]] ; then
    log "Upload was not successful.";
    exit 1
fi

log "Cleaning up local dumps";
rm -rf $BACKUP_DIRECTORY $BACKUP_DIRECTORY.tar.zst;
if [[ $? -ne 0 ]] ; then
    log "Failed to remove files from local machine";
    exit 1
fi

N_BACKUPS="{{ postgresql_backups_to_keep }}"
if [ "$N_BACKUPS" -gt 0 ]; then
    log "Checking for backups to remove";
    # List objects matching the pattern and capture the result in a variable
    objects_to_delete=$(aws s3api list-objects --bucket "{{ secrets.s3_bucket }}" --query "Contents[?starts_with(Key, 'postgres_backup_')].[Key, LastModified]" --output text | \
      sort -k2 | \
      head -n -"{{ postgresql_backups_to_keep }}"

    # Check if there are any objects to delete
    if [ -n "$objects_to_delete" ]; then
      echo "Deleting objects"
      # Format the object keys into the necessary JSON structure and delete the objects
      echo "$objects_to_delete" | \
        awk '{print "{\"Key\":\"" $1 "\"}"}' | \
        paste -sd, | \
        sed 's/^/{"Objects":[/;s/$/]}/' | \
        aws s3api delete-objects --bucket "{{ secrets.s3_bucket }}" --delete file:///dev/stdin
    else
      echo "No objects found to delete."
    fi
fi

exit 0
